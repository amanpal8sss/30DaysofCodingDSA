Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.




class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count=0;
        int majorElement;
        for(int i=0;i<nums.size();i++)
        {
          if(count == 0)
          { count=1;
            majorElement = nums[i];
          }
          else if(nums[i]==majorElement)
          {
               count++;
          }
          else
          {
            count--;
          }
        }
        int countNew=0;
        for(int j=0;j<nums.size();j++)
        {
            if(nums[j]==majorElement)
            {
                countNew++;
            }
        }
        if(countNew >nums.size()/2)
        {
            return majorElement;
        }
        return -1;
        
    }
};
